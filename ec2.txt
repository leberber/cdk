

=== .gitignore ===

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this project gitignore.  For a PyCharm
#  project, it is recommended to include the following JetBrains-specific gitignore:
#  https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore

.idea/
*.iws
*.iml
*.ipr

# Visual Studio Code
.vscode/

# FastAPI specific
*.db
*.sqlite
*.sqlite3
app.db

# Logs
*.log
logs/

# OS
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# CDK
cdk.out/
*.js
*.d.ts
node_modules/

# Temporary files
*.tmp
*.temp

=== README.md ===

1) Create a key value pair to use when using CDK to launch the instance# cdk


=== ap_helper.py ===

import os
import sys

def combine_files_with_headers_recursive(folder_path, output_file, extensions=None, extra_files=None, exclude_dirs=None, exclude_files=None):
    """
    Combines files with specified extensions or extra filenames into one output.
    Skips specified folders, files, and unreadable/binary files.
    
    :param folder_path: Root directory to start.
    :param output_file: Output file path.
    :param extensions: List of allowed file extensions (e.g., ['.py', '.txt']).
    :param extra_files: List of extra filenames without extensions (e.g., ['Dockerfile', '.env']).
    :param exclude_dirs: Set of directory names to exclude (e.g., {'.venv', 'node_modules'}).
    :param exclude_files: Set of filenames to exclude (e.g., {'package-lock.json'}).
    """
    if exclude_dirs is None:
        exclude_dirs = {'__pycache__', '.venv', 'node_modules', '.git'}
    
    if exclude_files is None:
        exclude_files = set()

    with open(output_file, 'w', encoding='utf-8') as outfile:
        for root, dirs, files in os.walk(folder_path):
            dirs[:] = [d for d in dirs if d not in exclude_dirs]

            for filename in sorted(files):
                # Skip excluded files
                if filename in exclude_files:
                    continue
                    
                file_path = os.path.join(root, filename)
                relative_path = os.path.relpath(file_path, folder_path)

                _, ext = os.path.splitext(filename)

                if ext in ('.pyc', '.pyo', '.so', '.dll'):
                    continue

                if (extensions and ext not in extensions) and (extra_files and filename not in extra_files):
                    continue

                outfile.write(f"\n\n=== {relative_path} ===\n\n")
                try:
                    with open(file_path, 'r', encoding='utf-8', errors='ignore') as infile:
                        outfile.write(infile.read())
                except Exception as e:
                    print(f"Skipping {relative_path}: {e}")


if __name__ == "__main__":
    if len(sys.argv) < 2:
        print("Usage: python script.py <input_directory>")
        sys.exit(1)

    input_folder = os.path.abspath(sys.argv[1])

    if not os.path.isdir(input_folder):
        print(f"Error: '{input_folder}' is not a valid directory.")
        sys.exit(1)

    script_dir = os.path.dirname(os.path.abspath(__file__))
    output_file_path = os.path.join(script_dir, f"{sys.argv[1]}.txt")

    combine_files_with_headers_recursive(
        folder_path=input_folder,
        output_file=output_file_path,
        extensions=[".py", ".txt", ".yml", ".yaml", ".md", ".json", ".ts", ".scss"],
        extra_files=["Dockerfile", ".gitignore", ".env"],  # Removed package-lock.json from here
        exclude_dirs={'.venv', 'node_modules', '__pycache__', '.git', '.angular', 'sql', 'sql new'},  # Removed package-lock.json from here
        exclude_files={'package-lock.json'}  # Added new parameter to exclude this file
    )

=== docker-compose.yml ===

services:
  backend:
    image: backend:latest
    ports:
      - "8000:8000"
    restart: unless-stopped
    
  frontend:
    image: frontend:latest
    ports:
      - "4200:80" 
    depends_on:
      - backend
    restart: unless-stopped

=== ec2.txt ===



=== tree.py ===

from directory_tree import DisplayTree
import os

if __name__ == '__main__':
    DisplayTree(
        os.path.abspath('ec2'), 
        ignoreList=['.git', 'node_modules', '__pycache__', '.pytest_cache'],
         showHidden=True
        
    )

=== infra/app.py ===

#!/usr/bin/env python3
import os
import aws_cdk as cdk
from ec2_stack import Ec2ProjectStack

app = cdk.App()

Ec2ProjectStack(app, "MyEc2ProjectStack",
    domain_name="elsuq.org",  # This will create DNS records
    env=cdk.Environment(
        account=os.getenv('CDK_DEFAULT_ACCOUNT'),
        region=os.getenv('CDK_DEFAULT_REGION')
    )
)

app.synth()

=== infra/cdk.context.json ===

{
  "vpc-provider:account=974445237958:filter.isDefault=true:region=eu-west-3:returnAsymmetricSubnets=true": {
    "vpcId": "vpc-01fa743127f2b5bfa",
    "vpcCidrBlock": "172.31.0.0/16",
    "ownerAccountId": "974445237958",
    "availabilityZones": [],
    "subnetGroups": [
      {
        "name": "Public",
        "type": "Public",
        "subnets": [
          {
            "subnetId": "subnet-0653848b1b02595ac",
            "cidr": "172.31.0.0/20",
            "availabilityZone": "eu-west-3a",
            "routeTableId": "rtb-09cbeb78723bd40b0"
          },
          {
            "subnetId": "subnet-060dd99af1fc4d1a2",
            "cidr": "172.31.16.0/20",
            "availabilityZone": "eu-west-3b",
            "routeTableId": "rtb-09cbeb78723bd40b0"
          },
          {
            "subnetId": "subnet-080a92dc46dee5563",
            "cidr": "172.31.32.0/20",
            "availabilityZone": "eu-west-3c",
            "routeTableId": "rtb-09cbeb78723bd40b0"
          }
        ]
      }
    ]
  },
  "hosted-zone:account=974445237958:domainName=elsuq.org:region=eu-west-3": {
    "Id": "/hostedzone/Z040531834UZQRHG5PULE",
    "Name": "elsuq.org."
  }
}


=== infra/cdk.json ===


{
    "app": "python app.py"
  }

  

=== infra/ec2_stack.py ===

from aws_cdk import (
    Stack,
    CfnOutput,
    aws_ec2 as ec2,
    aws_route53 as route53,
    Duration,
)
from constructs import Construct


class Ec2ProjectStack(Stack):

    def __init__(self, scope: Construct, construct_id: str, domain_name: str = None, **kwargs) -> None:
        super().__init__(scope, construct_id, **kwargs)

        # Use default VPC
        vpc = ec2.Vpc.from_lookup(self, "DefaultVpc", is_default=True)

        # Create security group
        security_group = ec2.SecurityGroup(
            self, "WebServerSG",
            vpc=vpc,
            description="Security group for web server",
            allow_all_outbound=True
        )

        # Allow SSH
        security_group.add_ingress_rule(
            ec2.Peer.any_ipv4(),
            ec2.Port.tcp(22),
            "Allow SSH"
        )

        # Allow HTTP
        security_group.add_ingress_rule(
            ec2.Peer.any_ipv4(),
            ec2.Port.tcp(80),
            "Allow HTTP"
        )

        # Allow HTTPS
        security_group.add_ingress_rule(
            ec2.Peer.any_ipv4(),
            ec2.Port.tcp(443),
            "Allow HTTPS"
        )

        # Allow FastAPI (port 8000)
        security_group.add_ingress_rule(
            ec2.Peer.any_ipv4(),
            ec2.Port.tcp(8000),
            "Allow FastAPI"
        )

        # Allow Angular dev server (port 4200)
        security_group.add_ingress_rule(
            ec2.Peer.any_ipv4(),
            ec2.Port.tcp(4200),
            "Allow Angular"
        )

        # Simplified user data - just basic setup
        user_data = ec2.UserData.for_linux()
        user_data.add_commands(
            "#!/bin/bash",
            "sudo dnf update -y",
            "sudo dnf install -y git",
            "echo 'Instance is ready!' | sudo tee /var/log/user-data.log",

            "sudo dnf install -y docker",
            "sudo systemctl start docker",
            "sudo systemctl enable docker",
            "sudo usermod -a -G docker ec2-user",

            "sudo curl -L https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m) -o /usr/local/bin/docker-compose",
            "sudo chmod +x /usr/local/bin/docker-compose",
            
            # Install Python 3 and pip
            "sudo dnf install -y python3 python3-pip",
            "sudo dnf install -y nginx certbot python3-certbot-nginx",
            "sudo systemctl enable nginx",
        )

        # Create EC2 instance
        instance = ec2.Instance(
            self, "WebServer",
            instance_type=ec2.InstanceType.of(
                ec2.InstanceClass.T3, 
                ec2.InstanceSize.SMALL
            ),
            machine_image=ec2.MachineImage.latest_amazon_linux2023(),
            vpc=vpc,
            security_group=security_group,
            key_name="amanu-ssh-key",
            user_data=user_data
        )

        # Domain configuration (if domain provided)
        if domain_name:
            # Lookup the existing hosted zone
            hosted_zone = route53.HostedZone.from_lookup(
                self, "HostedZone",
                domain_name=domain_name
            )

            # Create A record pointing to the instance public IP
            route53.ARecord(
                self, "ARecord",
                zone=hosted_zone,
                target=route53.RecordTarget.from_ip_addresses(instance.instance_public_ip),
                ttl=Duration.minutes(5)
            )

            # Create www subdomain record
            route53.ARecord(
                self, "WWWRecord",
                zone=hosted_zone,
                record_name="www",
                target=route53.RecordTarget.from_ip_addresses(instance.instance_public_ip),
                ttl=Duration.minutes(5)
            )

        # Output the public IP
        CfnOutput(
            self, "PublicIP",
            value=instance.instance_public_ip,
            description="Public IP of the EC2 instance"
        )

        # Output SSH command
        CfnOutput(
            self, "SSHCommand",
            value=f"ssh -i amanu-ssh-key.pem ec2-user@{instance.instance_public_ip}",
            description="SSH command to connect to the instance"
        )

        # Output server status URL
        CfnOutput(
            self, "ServerStatusURL",
            value=f"https://{domain_name}" if domain_name else f"http://{instance.instance_public_ip}",
            description="Application URL"
        )

=== infra/cdk.out/MyEc2ProjectStack.assets.json ===

{
  "version": "34.0.0",
  "files": {
    "1c78418f4b53a53221c162c4d61c7a4c6ecfbeef722c0ff1646d205a86a83f6b": {
      "source": {
        "path": "MyEc2ProjectStack.template.json",
        "packaging": "file"
      },
      "destinations": {
        "974445237958-eu-west-3": {
          "bucketName": "cdk-hnb659fds-assets-974445237958-eu-west-3",
          "objectKey": "1c78418f4b53a53221c162c4d61c7a4c6ecfbeef722c0ff1646d205a86a83f6b.json",
          "region": "eu-west-3",
          "assumeRoleArn": "arn:${AWS::Partition}:iam::974445237958:role/cdk-hnb659fds-file-publishing-role-974445237958-eu-west-3"
        }
      }
    }
  },
  "dockerImages": {}
}

=== infra/cdk.out/MyEc2ProjectStack.template.json ===

{
 "Resources": {
  "WebServerSG4D0F372C": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "Security group for web server",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "SecurityGroupIngress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow SSH",
      "FromPort": 22,
      "IpProtocol": "tcp",
      "ToPort": 22
     },
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow HTTP",
      "FromPort": 80,
      "IpProtocol": "tcp",
      "ToPort": 80
     },
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow HTTPS",
      "FromPort": 443,
      "IpProtocol": "tcp",
      "ToPort": 443
     },
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow FastAPI",
      "FromPort": 8000,
      "IpProtocol": "tcp",
      "ToPort": 8000
     },
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow Angular",
      "FromPort": 4200,
      "IpProtocol": "tcp",
      "ToPort": 4200
     }
    ],
    "VpcId": "vpc-01fa743127f2b5bfa"
   },
   "Metadata": {
    "aws:cdk:path": "MyEc2ProjectStack/WebServerSG/Resource"
   }
  },
  "WebServerInstanceRoleEEE3F4CD": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ec2.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "MyEc2ProjectStack/WebServer"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "MyEc2ProjectStack/WebServer/InstanceRole/Resource"
   }
  },
  "WebServerInstanceProfile7A5DA8F6": {
   "Type": "AWS::IAM::InstanceProfile",
   "Properties": {
    "Roles": [
     {
      "Ref": "WebServerInstanceRoleEEE3F4CD"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "MyEc2ProjectStack/WebServer/InstanceProfile"
   }
  },
  "WebServer99EDD300": {
   "Type": "AWS::EC2::Instance",
   "Properties": {
    "AvailabilityZone": "eu-west-3a",
    "IamInstanceProfile": {
     "Ref": "WebServerInstanceProfile7A5DA8F6"
    },
    "ImageId": {
     "Ref": "SsmParameterValueawsserviceamiamazonlinuxlatestal2023amikernel61x8664C96584B6F00A464EAD1953AFF4B05118Parameter"
    },
    "InstanceType": "t3.small",
    "KeyName": "amanu-ssh-key",
    "SecurityGroupIds": [
     {
      "Fn::GetAtt": [
       "WebServerSG4D0F372C",
       "GroupId"
      ]
     }
    ],
    "SubnetId": "subnet-0653848b1b02595ac",
    "Tags": [
     {
      "Key": "Name",
      "Value": "MyEc2ProjectStack/WebServer"
     }
    ],
    "UserData": {
     "Fn::Base64": "#!/bin/bash\n#!/bin/bash\nsudo dnf update -y\nsudo dnf install -y git\necho 'Instance is ready!' | sudo tee /var/log/user-data.log\nsudo dnf install -y docker\nsudo systemctl start docker\nsudo systemctl enable docker\nsudo usermod -a -G docker ec2-user\nsudo curl -L https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m) -o /usr/local/bin/docker-compose\nsudo chmod +x /usr/local/bin/docker-compose\nsudo dnf install -y python3 python3-pip\nsudo dnf install -y nginx certbot python3-certbot-nginx\nsudo systemctl enable nginx"
    }
   },
   "DependsOn": [
    "WebServerInstanceRoleEEE3F4CD"
   ],
   "Metadata": {
    "aws:cdk:path": "MyEc2ProjectStack/WebServer/Resource"
   }
  },
  "ARecordE7B57761": {
   "Type": "AWS::Route53::RecordSet",
   "Properties": {
    "HostedZoneId": "Z040531834UZQRHG5PULE",
    "Name": "elsuq.org.",
    "ResourceRecords": [
     {
      "Fn::GetAtt": [
       "WebServer99EDD300",
       "PublicIp"
      ]
     }
    ],
    "TTL": "300",
    "Type": "A"
   },
   "Metadata": {
    "aws:cdk:path": "MyEc2ProjectStack/ARecord/Resource"
   }
  },
  "WWWRecordA21741B4": {
   "Type": "AWS::Route53::RecordSet",
   "Properties": {
    "HostedZoneId": "Z040531834UZQRHG5PULE",
    "Name": "www.elsuq.org.",
    "ResourceRecords": [
     {
      "Fn::GetAtt": [
       "WebServer99EDD300",
       "PublicIp"
      ]
     }
    ],
    "TTL": "300",
    "Type": "A"
   },
   "Metadata": {
    "aws:cdk:path": "MyEc2ProjectStack/WWWRecord/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/1WOzQqDMBCEn8V73PpD6bn0UHqq6AOUNK40VRPZbBAJefei4qGnmflmDlNAnmWQJXJ2qWr7dNBvCA1L1YsanfWkUMjZvQKqAkKDypPm5U7WT+LWmX/wMI6lUbg2h49CyxFCbYcNH3rUFdlODxgFWc94LiFca1SW2m28uQY5xjVWkuSIjLSGp+fJ877af0ZRLfyx5lRCXsAl+TqtU/KG9YhQ7/oDVj/Hcu8AAAA="
   },
   "Metadata": {
    "aws:cdk:path": "MyEc2ProjectStack/CDKMetadata/Default"
   }
  }
 },
 "Parameters": {
  "SsmParameterValueawsserviceamiamazonlinuxlatestal2023amikernel61x8664C96584B6F00A464EAD1953AFF4B05118Parameter": {
   "Type": "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>",
   "Default": "/aws/service/ami-amazon-linux-latest/al2023-ami-kernel-6.1-x86_64"
  },
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Outputs": {
  "PublicIP": {
   "Description": "Public IP of the EC2 instance",
   "Value": {
    "Fn::GetAtt": [
     "WebServer99EDD300",
     "PublicIp"
    ]
   }
  },
  "SSHCommand": {
   "Description": "SSH command to connect to the instance",
   "Value": {
    "Fn::Join": [
     "",
     [
      "ssh -i amanu-ssh-key.pem ec2-user@",
      {
       "Fn::GetAtt": [
        "WebServer99EDD300",
        "PublicIp"
       ]
      }
     ]
    ]
   }
  },
  "ServerStatusURL": {
   "Description": "Application URL",
   "Value": "https://elsuq.org"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}

=== infra/cdk.out/manifest.json ===

{
  "version": "34.0.0",
  "artifacts": {
    "MyEc2ProjectStack.assets": {
      "type": "cdk:asset-manifest",
      "properties": {
        "file": "MyEc2ProjectStack.assets.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
      }
    },
    "MyEc2ProjectStack": {
      "type": "aws:cloudformation:stack",
      "environment": "aws://974445237958/eu-west-3",
      "properties": {
        "templateFile": "MyEc2ProjectStack.template.json",
        "terminationProtection": false,
        "validateOnSynth": false,
        "assumeRoleArn": "arn:${AWS::Partition}:iam::974445237958:role/cdk-hnb659fds-deploy-role-974445237958-eu-west-3",
        "cloudFormationExecutionRoleArn": "arn:${AWS::Partition}:iam::974445237958:role/cdk-hnb659fds-cfn-exec-role-974445237958-eu-west-3",
        "stackTemplateAssetObjectUrl": "s3://cdk-hnb659fds-assets-974445237958-eu-west-3/1c78418f4b53a53221c162c4d61c7a4c6ecfbeef722c0ff1646d205a86a83f6b.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version",
        "additionalDependencies": [
          "MyEc2ProjectStack.assets"
        ],
        "lookupRole": {
          "arn": "arn:${AWS::Partition}:iam::974445237958:role/cdk-hnb659fds-lookup-role-974445237958-eu-west-3",
          "requiresBootstrapStackVersion": 8,
          "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
        }
      },
      "dependencies": [
        "MyEc2ProjectStack.assets"
      ],
      "metadata": {
        "/MyEc2ProjectStack/WebServerSG/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "WebServerSG4D0F372C"
          }
        ],
        "/MyEc2ProjectStack/WebServer/InstanceRole/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "WebServerInstanceRoleEEE3F4CD"
          }
        ],
        "/MyEc2ProjectStack/WebServer/InstanceProfile": [
          {
            "type": "aws:cdk:logicalId",
            "data": "WebServerInstanceProfile7A5DA8F6"
          }
        ],
        "/MyEc2ProjectStack/WebServer/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "WebServer99EDD300"
          }
        ],
        "/MyEc2ProjectStack/SsmParameterValue:--aws--service--ami-amazon-linux-latest--al2023-ami-kernel-6.1-x86_64:C96584B6-F00A-464E-AD19-53AFF4B05118.Parameter": [
          {
            "type": "aws:cdk:logicalId",
            "data": "SsmParameterValueawsserviceamiamazonlinuxlatestal2023amikernel61x8664C96584B6F00A464EAD1953AFF4B05118Parameter"
          }
        ],
        "/MyEc2ProjectStack/ARecord/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ARecordE7B57761"
          }
        ],
        "/MyEc2ProjectStack/WWWRecord/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "WWWRecordA21741B4"
          }
        ],
        "/MyEc2ProjectStack/PublicIP": [
          {
            "type": "aws:cdk:logicalId",
            "data": "PublicIP"
          }
        ],
        "/MyEc2ProjectStack/SSHCommand": [
          {
            "type": "aws:cdk:logicalId",
            "data": "SSHCommand"
          }
        ],
        "/MyEc2ProjectStack/ServerStatusURL": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ServerStatusURL"
          }
        ],
        "/MyEc2ProjectStack/CDKMetadata/Default": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CDKMetadata"
          }
        ],
        "/MyEc2ProjectStack/BootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "BootstrapVersion"
          }
        ],
        "/MyEc2ProjectStack/CheckBootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CheckBootstrapVersion"
          }
        ]
      },
      "displayName": "MyEc2ProjectStack"
    },
    "Tree": {
      "type": "cdk:tree",
      "properties": {
        "file": "tree.json"
      }
    }
  }
}

=== infra/cdk.out/tree.json ===

{
  "version": "tree-0.1",
  "tree": {
    "id": "App",
    "path": "",
    "children": {
      "MyEc2ProjectStack": {
        "id": "MyEc2ProjectStack",
        "path": "MyEc2ProjectStack",
        "children": {
          "DefaultVpc": {
            "id": "DefaultVpc",
            "path": "MyEc2ProjectStack/DefaultVpc",
            "children": {
              "PublicSubnet1": {
                "id": "PublicSubnet1",
                "path": "MyEc2ProjectStack/DefaultVpc/PublicSubnet1",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.100.0"
                }
              },
              "PublicSubnet2": {
                "id": "PublicSubnet2",
                "path": "MyEc2ProjectStack/DefaultVpc/PublicSubnet2",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.100.0"
                }
              },
              "PublicSubnet3": {
                "id": "PublicSubnet3",
                "path": "MyEc2ProjectStack/DefaultVpc/PublicSubnet3",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.100.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.100.0"
            }
          },
          "WebServerSG": {
            "id": "WebServerSG",
            "path": "MyEc2ProjectStack/WebServerSG",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "MyEc2ProjectStack/WebServerSG/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroup",
                  "aws:cdk:cloudformation:props": {
                    "groupDescription": "Security group for web server",
                    "securityGroupEgress": [
                      {
                        "cidrIp": "0.0.0.0/0",
                        "description": "Allow all outbound traffic by default",
                        "ipProtocol": "-1"
                      }
                    ],
                    "securityGroupIngress": [
                      {
                        "cidrIp": "0.0.0.0/0",
                        "ipProtocol": "tcp",
                        "fromPort": 22,
                        "toPort": 22,
                        "description": "Allow SSH"
                      },
                      {
                        "cidrIp": "0.0.0.0/0",
                        "ipProtocol": "tcp",
                        "fromPort": 80,
                        "toPort": 80,
                        "description": "Allow HTTP"
                      },
                      {
                        "cidrIp": "0.0.0.0/0",
                        "ipProtocol": "tcp",
                        "fromPort": 443,
                        "toPort": 443,
                        "description": "Allow HTTPS"
                      },
                      {
                        "cidrIp": "0.0.0.0/0",
                        "ipProtocol": "tcp",
                        "fromPort": 8000,
                        "toPort": 8000,
                        "description": "Allow FastAPI"
                      },
                      {
                        "cidrIp": "0.0.0.0/0",
                        "ipProtocol": "tcp",
                        "fromPort": 4200,
                        "toPort": 4200,
                        "description": "Allow Angular"
                      }
                    ],
                    "vpcId": "vpc-01fa743127f2b5bfa"
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ec2.CfnSecurityGroup",
                  "version": "2.100.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_ec2.SecurityGroup",
              "version": "2.100.0"
            }
          },
          "WebServer": {
            "id": "WebServer",
            "path": "MyEc2ProjectStack/WebServer",
            "children": {
              "InstanceRole": {
                "id": "InstanceRole",
                "path": "MyEc2ProjectStack/WebServer/InstanceRole",
                "children": {
                  "ImportInstanceRole": {
                    "id": "ImportInstanceRole",
                    "path": "MyEc2ProjectStack/WebServer/InstanceRole/ImportInstanceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.100.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "MyEc2ProjectStack/WebServer/InstanceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "ec2.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "MyEc2ProjectStack/WebServer"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.100.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.100.0"
                }
              },
              "InstanceProfile": {
                "id": "InstanceProfile",
                "path": "MyEc2ProjectStack/WebServer/InstanceProfile",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::IAM::InstanceProfile",
                  "aws:cdk:cloudformation:props": {
                    "roles": [
                      {
                        "Ref": "WebServerInstanceRoleEEE3F4CD"
                      }
                    ]
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.CfnInstanceProfile",
                  "version": "2.100.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "MyEc2ProjectStack/WebServer/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::Instance",
                  "aws:cdk:cloudformation:props": {
                    "availabilityZone": "eu-west-3a",
                    "iamInstanceProfile": {
                      "Ref": "WebServerInstanceProfile7A5DA8F6"
                    },
                    "imageId": {
                      "Ref": "SsmParameterValueawsserviceamiamazonlinuxlatestal2023amikernel61x8664C96584B6F00A464EAD1953AFF4B05118Parameter"
                    },
                    "instanceType": "t3.small",
                    "keyName": "amanu-ssh-key",
                    "securityGroupIds": [
                      {
                        "Fn::GetAtt": [
                          "WebServerSG4D0F372C",
                          "GroupId"
                        ]
                      }
                    ],
                    "subnetId": "subnet-0653848b1b02595ac",
                    "tags": [
                      {
                        "key": "Name",
                        "value": "MyEc2ProjectStack/WebServer"
                      }
                    ],
                    "userData": {
                      "Fn::Base64": "#!/bin/bash\n#!/bin/bash\nsudo dnf update -y\nsudo dnf install -y git\necho 'Instance is ready!' | sudo tee /var/log/user-data.log\nsudo dnf install -y docker\nsudo systemctl start docker\nsudo systemctl enable docker\nsudo usermod -a -G docker ec2-user\nsudo curl -L https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m) -o /usr/local/bin/docker-compose\nsudo chmod +x /usr/local/bin/docker-compose\nsudo dnf install -y python3 python3-pip\nsudo dnf install -y nginx certbot python3-certbot-nginx\nsudo systemctl enable nginx"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ec2.CfnInstance",
                  "version": "2.100.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_ec2.Instance",
              "version": "2.100.0"
            }
          },
          "SsmParameterValue:--aws--service--ami-amazon-linux-latest--al2023-ami-kernel-6.1-x86_64:C96584B6-F00A-464E-AD19-53AFF4B05118.Parameter": {
            "id": "SsmParameterValue:--aws--service--ami-amazon-linux-latest--al2023-ami-kernel-6.1-x86_64:C96584B6-F00A-464E-AD19-53AFF4B05118.Parameter",
            "path": "MyEc2ProjectStack/SsmParameterValue:--aws--service--ami-amazon-linux-latest--al2023-ami-kernel-6.1-x86_64:C96584B6-F00A-464E-AD19-53AFF4B05118.Parameter",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnParameter",
              "version": "2.100.0"
            }
          },
          "SsmParameterValue:--aws--service--ami-amazon-linux-latest--al2023-ami-kernel-6.1-x86_64:C96584B6-F00A-464E-AD19-53AFF4B05118": {
            "id": "SsmParameterValue:--aws--service--ami-amazon-linux-latest--al2023-ami-kernel-6.1-x86_64:C96584B6-F00A-464E-AD19-53AFF4B05118",
            "path": "MyEc2ProjectStack/SsmParameterValue:--aws--service--ami-amazon-linux-latest--al2023-ami-kernel-6.1-x86_64:C96584B6-F00A-464E-AD19-53AFF4B05118",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.100.0"
            }
          },
          "HostedZone": {
            "id": "HostedZone",
            "path": "MyEc2ProjectStack/HostedZone",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.100.0"
            }
          },
          "ARecord": {
            "id": "ARecord",
            "path": "MyEc2ProjectStack/ARecord",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "MyEc2ProjectStack/ARecord/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Route53::RecordSet",
                  "aws:cdk:cloudformation:props": {
                    "hostedZoneId": "Z040531834UZQRHG5PULE",
                    "name": "elsuq.org.",
                    "resourceRecords": [
                      {
                        "Fn::GetAtt": [
                          "WebServer99EDD300",
                          "PublicIp"
                        ]
                      }
                    ],
                    "ttl": "300",
                    "type": "A"
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_route53.CfnRecordSet",
                  "version": "2.100.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_route53.ARecord",
              "version": "2.100.0"
            }
          },
          "WWWRecord": {
            "id": "WWWRecord",
            "path": "MyEc2ProjectStack/WWWRecord",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "MyEc2ProjectStack/WWWRecord/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Route53::RecordSet",
                  "aws:cdk:cloudformation:props": {
                    "hostedZoneId": "Z040531834UZQRHG5PULE",
                    "name": "www.elsuq.org.",
                    "resourceRecords": [
                      {
                        "Fn::GetAtt": [
                          "WebServer99EDD300",
                          "PublicIp"
                        ]
                      }
                    ],
                    "ttl": "300",
                    "type": "A"
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_route53.CfnRecordSet",
                  "version": "2.100.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_route53.ARecord",
              "version": "2.100.0"
            }
          },
          "PublicIP": {
            "id": "PublicIP",
            "path": "MyEc2ProjectStack/PublicIP",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnOutput",
              "version": "2.100.0"
            }
          },
          "SSHCommand": {
            "id": "SSHCommand",
            "path": "MyEc2ProjectStack/SSHCommand",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnOutput",
              "version": "2.100.0"
            }
          },
          "ServerStatusURL": {
            "id": "ServerStatusURL",
            "path": "MyEc2ProjectStack/ServerStatusURL",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnOutput",
              "version": "2.100.0"
            }
          },
          "CDKMetadata": {
            "id": "CDKMetadata",
            "path": "MyEc2ProjectStack/CDKMetadata",
            "children": {
              "Default": {
                "id": "Default",
                "path": "MyEc2ProjectStack/CDKMetadata/Default",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.100.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.4.2"
            }
          },
          "BootstrapVersion": {
            "id": "BootstrapVersion",
            "path": "MyEc2ProjectStack/BootstrapVersion",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnParameter",
              "version": "2.100.0"
            }
          },
          "CheckBootstrapVersion": {
            "id": "CheckBootstrapVersion",
            "path": "MyEc2ProjectStack/CheckBootstrapVersion",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnRule",
              "version": "2.100.0"
            }
          }
        },
        "constructInfo": {
          "fqn": "aws-cdk-lib.Stack",
          "version": "2.100.0"
        }
      },
      "Tree": {
        "id": "Tree",
        "path": "Tree",
        "constructInfo": {
          "fqn": "constructs.Construct",
          "version": "10.4.2"
        }
      }
    },
    "constructInfo": {
      "fqn": "aws-cdk-lib.App",
      "version": "2.100.0"
    }
  }
}

=== frontend/.gitignore ===

# See https://docs.github.com/get-started/getting-started-with-git/ignoring-files for more about ignoring files.

# Compiled output
/dist
/tmp
/out-tsc
/bazel-out

# Node
/node_modules
npm-debug.log
yarn-error.log

# IDEs and editors
.idea/
.project
.classpath
.c9/
*.launch
.settings/
*.sublime-workspace

# Visual Studio Code
.vscode/*
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
.history/*

# Miscellaneous
/.angular/cache
.sass-cache/
/connect.lock
/coverage
/libpeerconnection.log
testem.log
/typings

# System files
.DS_Store
Thumbs.db


=== frontend/Dockerfile ===


FROM nginx:alpine

# Copy the pre-built Angular app
COPY dist/frontend/browser /usr/share/nginx/html

# Copy nginx config
COPY nginx.conf /etc/nginx/nginx.conf

EXPOSE 80

CMD ["nginx", "-g", "daemon off;"]



=== frontend/angular.json ===

{
  "$schema": "./node_modules/@angular/cli/lib/config/schema.json",
  "version": 1,
  "newProjectRoot": "projects",
  "projects": {
    "frontend": {
      "projectType": "application",
      "schematics": {
        "@schematics/angular:component": {
          "style": "scss"
        }
      },
      "root": "",
      "sourceRoot": "src",
      "prefix": "app",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:application",
          "options": {
            "outputPath": "dist/frontend",
            "index": "src/index.html",
            "browser": "src/main.ts",
            "polyfills": [
              "zone.js"
            ],
            "tsConfig": "tsconfig.app.json",
            "inlineStyleLanguage": "scss",
            "assets": [
              {
                "glob": "**/*",
                "input": "public"
              }
            ],
            "styles": [
              "src/styles.scss"
            ],
            "scripts": []
          },
          "configurations": {
            "production": {
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "500kB",
                  "maximumError": "1MB"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "4kB",
                  "maximumError": "8kB"
                }
              ],
              "outputHashing": "all"
            },
            "development": {
              "optimization": false,
              "extractLicenses": false,
              "sourceMap": true
            }
          },
          "defaultConfiguration": "production"
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "configurations": {
            "production": {
              "buildTarget": "frontend:build:production"
            },
            "development": {
              "buildTarget": "frontend:build:development"
            }
          },
          "defaultConfiguration": "development"
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n"
        },
        "test": {
          "builder": "@angular-devkit/build-angular:karma",
          "options": {
            "polyfills": [
              "zone.js",
              "zone.js/testing"
            ],
            "tsConfig": "tsconfig.spec.json",
            "inlineStyleLanguage": "scss",
            "assets": [
              {
                "glob": "**/*",
                "input": "public"
              }
            ],
            "styles": [
              "src/styles.scss"
            ],
            "scripts": []
          }
        }
      }
    }
  },
  "cli": {
    "analytics": "e3b30679-0489-479f-b415-4b0f212dcc4c"
  }
}


=== frontend/package.json ===

{
  "name": "frontend",
  "version": "0.0.0",
  "scripts": {
    "ng": "ng",
    "start": "ng serve",
    "build": "ng build",
    "watch": "ng build --watch --configuration development",
    "test": "ng test"
  },
  "private": true,
  "dependencies": {
    "@angular/common": "^19.2.0",
    "@angular/compiler": "^19.2.0",
    "@angular/core": "^19.2.0",
    "@angular/forms": "^19.2.0",
    "@angular/platform-browser": "^19.2.0",
    "@angular/platform-browser-dynamic": "^19.2.0",
    "@angular/router": "^19.2.0",
    "rxjs": "~7.8.0",
    "tslib": "^2.3.0",
    "zone.js": "~0.15.0"
  },
  "devDependencies": {
    "@angular-devkit/build-angular": "^19.2.3",
    "@angular/cli": "^19.2.3",
    "@angular/compiler-cli": "^19.2.0",
    "@types/jasmine": "~5.1.0",
    "jasmine-core": "~5.6.0",
    "karma": "~6.4.0",
    "karma-chrome-launcher": "~3.2.0",
    "karma-coverage": "~2.2.0",
    "karma-jasmine": "~5.1.0",
    "karma-jasmine-html-reporter": "~2.1.0",
    "typescript": "~5.7.2"
  }
}


=== frontend/tsconfig.app.json ===

/* To learn more about Typescript configuration file: https://www.typescriptlang.org/docs/handbook/tsconfig-json.html. */
/* To learn more about Angular compiler options: https://angular.dev/reference/configs/angular-compiler-options. */
{
  "extends": "./tsconfig.json",
  "compilerOptions": {
    "outDir": "./out-tsc/app",
    "types": []
  },
  "files": [
    "src/main.ts"
  ],
  "include": [
    "src/**/*.d.ts"
  ]
}


=== frontend/tsconfig.json ===

/* To learn more about Typescript configuration file: https://www.typescriptlang.org/docs/handbook/tsconfig-json.html. */
/* To learn more about Angular compiler options: https://angular.dev/reference/configs/angular-compiler-options. */
{
  "compileOnSave": false,
  "compilerOptions": {
    "outDir": "./dist/out-tsc",
    "strict": true,
    "noImplicitOverride": true,
    "noPropertyAccessFromIndexSignature": true,
    "noImplicitReturns": true,
    "noFallthroughCasesInSwitch": true,
    "skipLibCheck": true,
    "isolatedModules": true,
    "esModuleInterop": true,
    "experimentalDecorators": true,
    "moduleResolution": "bundler",
    "importHelpers": true,
    "target": "ES2022",
    "module": "ES2022"
  },
  "angularCompilerOptions": {
    "enableI18nLegacyMessageIdFormat": false,
    "strictInjectionParameters": true,
    "strictInputAccessModifiers": true,
    "strictTemplates": true
  }
}


=== frontend/tsconfig.spec.json ===

/* To learn more about Typescript configuration file: https://www.typescriptlang.org/docs/handbook/tsconfig-json.html. */
/* To learn more about Angular compiler options: https://angular.dev/reference/configs/angular-compiler-options. */
{
  "extends": "./tsconfig.json",
  "compilerOptions": {
    "outDir": "./out-tsc/spec",
    "types": [
      "jasmine"
    ]
  },
  "include": [
    "src/**/*.spec.ts",
    "src/**/*.d.ts"
  ]
}


=== frontend/dist/frontend/3rdpartylicenses.txt ===


--------------------------------------------------------------------------------
Package: @angular/core
License: "MIT"

The MIT License

Copyright (c) 2010-2025 Google LLC. https://angular.dev/license

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.

--------------------------------------------------------------------------------
Package: rxjs
License: "Apache-2.0"

                               Apache License
                         Version 2.0, January 2004
                      http://www.apache.org/licenses/

 TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION

 1. Definitions.

    "License" shall mean the terms and conditions for use, reproduction,
    and distribution as defined by Sections 1 through 9 of this document.

    "Licensor" shall mean the copyright owner or entity authorized by
    the copyright owner that is granting the License.

    "Legal Entity" shall mean the union of the acting entity and all
    other entities that control, are controlled by, or are under common
    control with that entity. For the purposes of this definition,
    "control" means (i) the power, direct or indirect, to cause the
    direction or management of such entity, whether by contract or
    otherwise, or (ii) ownership of fifty percent (50%) or more of the
    outstanding shares, or (iii) beneficial ownership of such entity.

    "You" (or "Your") shall mean an individual or Legal Entity
    exercising permissions granted by this License.

    "Source" form shall mean the preferred form for making modifications,
    including but not limited to software source code, documentation
    source, and configuration files.

    "Object" form shall mean any form resulting from mechanical
    transformation or translation of a Source form, including but
    not limited to compiled object code, generated documentation,
    and conversions to other media types.

    "Work" shall mean the work of authorship, whether in Source or
    Object form, made available under the License, as indicated by a
    copyright notice that is included in or attached to the work
    (an example is provided in the Appendix below).

    "Derivative Works" shall mean any work, whether in Source or Object
    form, that is based on (or derived from) the Work and for which the
    editorial revisions, annotations, elaborations, or other modifications
    represent, as a whole, an original work of authorship. For the purposes
    of this License, Derivative Works shall not include works that remain
    separable from, or merely link (or bind by name) to the interfaces of,
    the Work and Derivative Works thereof.

    "Contribution" shall mean any work of authorship, including
    the original version of the Work and any modifications or additions
    to that Work or Derivative Works thereof, that is intentionally
    submitted to Licensor for inclusion in the Work by the copyright owner
    or by an individual or Legal Entity authorized to submit on behalf of
    the copyright owner. For the purposes of this definition, "submitted"
    means any form of electronic, verbal, or written communication sent
    to the Licensor or its representatives, including but not limited to
    communication on electronic mailing lists, source code control systems,
    and issue tracking systems that are managed by, or on behalf of, the
    Licensor for the purpose of discussing and improving the Work, but
    excluding communication that is conspicuously marked or otherwise
    designated in writing by the copyright owner as "Not a Contribution."

    "Contributor" shall mean Licensor and any individual or Legal Entity
    on behalf of whom a Contribution has been received by Licensor and
    subsequently incorporated within the Work.

 2. Grant of Copyright License. Subject to the terms and conditions of
    this License, each Contributor hereby grants to You a perpetual,
    worldwide, non-exclusive, no-charge, royalty-free, irrevocable
    copyright license to reproduce, prepare Derivative Works of,
    publicly display, publicly perform, sublicense, and distribute the
    Work and such Derivative Works in Source or Object form.

 3. Grant of Patent License. Subject to the terms and conditions of
    this License, each Contributor hereby grants to You a perpetual,
    worldwide, non-exclusive, no-charge, royalty-free, irrevocable
    (except as stated in this section) patent license to make, have made,
    use, offer to sell, sell, import, and otherwise transfer the Work,
    where such license applies only to those patent claims licensable
    by such Contributor that are necessarily infringed by their
    Contribution(s) alone or by combination of their Contribution(s)
    with the Work to which such Contribution(s) was submitted. If You
    institute patent litigation against any entity (including a
    cross-claim or counterclaim in a lawsuit) alleging that the Work
    or a Contribution incorporated within the Work constitutes direct
    or contributory patent infringement, then any patent licenses
    granted to You under this License for that Work shall terminate
    as of the date such litigation is filed.

 4. Redistribution. You may reproduce and distribute copies of the
    Work or Derivative Works thereof in any medium, with or without
    modifications, and in Source or Object form, provided that You
    meet the following conditions:

    (a) You must give any other recipients of the Work or
        Derivative Works a copy of this License; and

    (b) You must cause any modified files to carry prominent notices
        stating that You changed the files; and

    (c) You must retain, in the Source form of any Derivative Works
        that You distribute, all copyright, patent, trademark, and
        attribution notices from the Source form of the Work,
        excluding those notices that do not pertain to any part of
        the Derivative Works; and

    (d) If the Work includes a "NOTICE" text file as part of its
        distribution, then any Derivative Works that You distribute must
        include a readable copy of the attribution notices contained
        within such NOTICE file, excluding those notices that do not
        pertain to any part of the Derivative Works, in at least one
        of the following places: within a NOTICE text file distributed
        as part of the Derivative Works; within the Source form or
        documentation, if provided along with the Derivative Works; or,
        within a display generated by the Derivative Works, if and
        wherever such third-party notices normally appear. The contents
        of the NOTICE file are for informational purposes only and
        do not modify the License. You may add Your own attribution
        notices within Derivative Works that You distribute, alongside
        or as an addendum to the NOTICE text from the Work, provided
        that such additional attribution notices cannot be construed
        as modifying the License.

    You may add Your own copyright statement to Your modifications and
    may provide additional or different license terms and conditions
    for use, reproduction, or distribution of Your modifications, or
    for any such Derivative Works as a whole, provided Your use,
    reproduction, and distribution of the Work otherwise complies with
    the conditions stated in this License.

 5. Submission of Contributions. Unless You explicitly state otherwise,
    any Contribution intentionally submitted for inclusion in the Work
    by You to the Licensor shall be under the terms and conditions of
    this License, without any additional terms or conditions.
    Notwithstanding the above, nothing herein shall supersede or modify
    the terms of any separate license agreement you may have executed
    with Licensor regarding such Contributions.

 6. Trademarks. This License does not grant permission to use the trade
    names, trademarks, service marks, or product names of the Licensor,
    except as required for reasonable and customary use in describing the
    origin of the Work and reproducing the content of the NOTICE file.

 7. Disclaimer of Warranty. Unless required by applicable law or
    agreed to in writing, Licensor provides the Work (and each
    Contributor provides its Contributions) on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
    implied, including, without limitation, any warranties or conditions
    of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A
    PARTICULAR PURPOSE. You are solely responsible for determining the
    appropriateness of using or redistributing the Work and assume any
    risks associated with Your exercise of permissions under this License.

 8. Limitation of Liability. In no event and under no legal theory,
    whether in tort (including negligence), contract, or otherwise,
    unless required by applicable law (such as deliberate and grossly
    negligent acts) or agreed to in writing, shall any Contributor be
    liable to You for damages, including any direct, indirect, special,
    incidental, or consequential damages of any character arising as a
    result of this License or out of the use or inability to use the
    Work (including but not limited to damages for loss of goodwill,
    work stoppage, computer failure or malfunction, or any and all
    other commercial damages or losses), even if such Contributor
    has been advised of the possibility of such damages.

 9. Accepting Warranty or Additional Liability. While redistributing
    the Work or Derivative Works thereof, You may choose to offer,
    and charge a fee for, acceptance of support, warranty, indemnity,
    or other liability obligations and/or rights consistent with this
    License. However, in accepting such obligations, You may act only
    on Your own behalf and on Your sole responsibility, not on behalf
    of any other Contributor, and only if You agree to indemnify,
    defend, and hold each Contributor harmless for any liability
    incurred by, or claims asserted against, such Contributor by reason
    of your accepting any such warranty or additional liability.

 END OF TERMS AND CONDITIONS

 APPENDIX: How to apply the Apache License to your work.

    To apply the Apache License to your work, attach the following
    boilerplate notice, with the fields enclosed by brackets "[]"
    replaced with your own identifying information. (Don't include
    the brackets!)  The text should be enclosed in the appropriate
    comment syntax for the file format. We also recommend that a
    file or class name and description of purpose be included on the
    same "printed page" as the copyright notice for easier
    identification within third-party archives.

 Copyright (c) 2015-2018 Google, Inc., Netflix, Inc., Microsoft Corp. and contributors

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
 

--------------------------------------------------------------------------------
Package: tslib
License: "0BSD"

Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
--------------------------------------------------------------------------------
Package: @angular/common
License: "MIT"

The MIT License

Copyright (c) 2010-2025 Google LLC. https://angular.dev/license

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.

--------------------------------------------------------------------------------
Package: @angular/platform-browser
License: "MIT"

The MIT License

Copyright (c) 2010-2025 Google LLC. https://angular.dev/license

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.

--------------------------------------------------------------------------------
Package: @angular/router
License: "MIT"

The MIT License

Copyright (c) 2010-2025 Google LLC. https://angular.dev/license

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.

--------------------------------------------------------------------------------
Package: @angular/forms
License: "MIT"

The MIT License

Copyright (c) 2010-2025 Google LLC. https://angular.dev/license

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.

--------------------------------------------------------------------------------
Package: zone.js
License: "MIT"

The MIT License

Copyright (c) 2010-2025 Google LLC. https://angular.dev/license

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.

--------------------------------------------------------------------------------


=== frontend/dist/frontend/prerendered-routes.json ===

{
  "routes": {}
}

=== frontend/.vscode/extensions.json ===

{
  // For more information, visit: https://go.microsoft.com/fwlink/?linkid=827846
  "recommendations": ["angular.ng-template"]
}


=== frontend/.vscode/launch.json ===

{
  // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
  "version": "0.2.0",
  "configurations": [
    {
      "name": "ng serve",
      "type": "chrome",
      "request": "launch",
      "preLaunchTask": "npm: start",
      "url": "http://localhost:4200/"
    },
    {
      "name": "ng test",
      "type": "chrome",
      "request": "launch",
      "preLaunchTask": "npm: test",
      "url": "http://localhost:9876/debug.html"
    }
  ]
}


=== frontend/.vscode/tasks.json ===

{
  // For more information, visit: https://go.microsoft.com/fwlink/?LinkId=733558
  "version": "2.0.0",
  "tasks": [
    {
      "type": "npm",
      "script": "start",
      "isBackground": true,
      "problemMatcher": {
        "owner": "typescript",
        "pattern": "$tsc",
        "background": {
          "activeOnStart": true,
          "beginsPattern": {
            "regexp": "(.*?)"
          },
          "endsPattern": {
            "regexp": "bundle generation complete"
          }
        }
      }
    },
    {
      "type": "npm",
      "script": "test",
      "isBackground": true,
      "problemMatcher": {
        "owner": "typescript",
        "pattern": "$tsc",
        "background": {
          "activeOnStart": true,
          "beginsPattern": {
            "regexp": "(.*?)"
          },
          "endsPattern": {
            "regexp": "bundle generation complete"
          }
        }
      }
    }
  ]
}


=== frontend/src/main.ts ===

import { bootstrapApplication } from '@angular/platform-browser';
import { appConfig } from './app/app.config';
import { AppComponent } from './app/app.component';

bootstrapApplication(AppComponent, appConfig)
  .catch((err) => console.error(err));


=== frontend/src/styles.scss ===

/* You can add global styles to this file, and also import other style files */


=== frontend/src/app/app.component.scss ===

.container {
    max-width: 800px;
    margin: 0 auto;
    padding: 20px;
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    line-height: 1.6;
  }
  
  /* Header */
  .header {
    text-align: center;
    margin-bottom: 40px;
    padding: 30px;
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    color: white;
    border-radius: 12px;
    box-shadow: 0 4px 20px rgba(0,0,0,0.1);
  
    h1 {
      margin: 0;
      font-size: 2.5rem;
      font-weight: 700;
    }
  
    .subtitle {
      margin: 10px 0 0 0;
      opacity: 0.9;
      font-size: 1.1rem;
    }
  }
  
  /* Add Section */
  .add-section {
    background: #f8f9fa;
    padding: 30px;
    border-radius: 12px;
    margin-bottom: 30px;
    border: 1px solid #e9ecef;
  
    h2 {
      margin-top: 0;
      color: #333;
      font-size: 1.5rem;
      margin-bottom: 20px;
    }
  }
  
  .add-form {
    .form-group {
      margin-bottom: 20px;
  
      label {
        display: block;
        margin-bottom: 8px;
        font-weight: 600;
        color: #555;
      }
    }
  
    .form-control {
      width: 100%;
      padding: 12px 16px;
      border: 2px solid #e9ecef;
      border-radius: 8px;
      font-size: 16px;
      transition: all 0.3s ease;
      box-sizing: border-box;
  
      &:focus {
        outline: none;
        border-color: #667eea;
        box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
      }
  
      &:disabled {
        background-color: #f8f9fa;
        cursor: not-allowed;
      }
    }
  
    textarea.form-control {
      resize: vertical;
      min-height: 90px;
    }
  }
  
  .form-actions {
    display: flex;
    gap: 12px;
    margin-top: 25px;
  }
  
  /* Buttons */
  .btn {
    padding: 12px 24px;
    border: none;
    border-radius: 8px;
    font-size: 14px;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.3s ease;
    text-transform: none;
  
    &:disabled {
      opacity: 0.6;
      cursor: not-allowed;
    }
  
    &.btn-primary {
      background: #667eea;
      color: white;
  
      &:hover:not(:disabled) {
        background: #5a6fd8;
        transform: translateY(-1px);
      }
    }
  
    &.btn-secondary {
      background: #6c757d;
      color: white;
  
      &:hover:not(:disabled) {
        background: #5a6268;
      }
    }
  
    &.btn-danger {
      background: #dc3545;
      color: white;
  
      &:hover:not(:disabled) {
        background: #c82333;
      }
    }
  
    &.btn-sm {
      padding: 8px 12px;
      font-size: 12px;
    }
  }
  
  /* Items Section */
  .items-section {
    .section-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 20px;
      padding-bottom: 15px;
      border-bottom: 3px solid #667eea;
  
      h2 {
        margin: 0;
        color: #333;
        font-size: 1.5rem;
      }
  
      .item-count {
        background: #667eea;
        color: white;
        padding: 6px 12px;
        border-radius: 20px;
        font-size: 14px;
        font-weight: 600;
      }
    }
  }
  
  /* Loading State */
  .loading-state {
    text-align: center;
    padding: 60px 20px;
    color: #6c757d;
  
    .spinner {
      width: 40px;
      height: 40px;
      border: 4px solid #f3f3f3;
      border-top: 4px solid #667eea;
      border-radius: 50%;
      animation: spin 1s linear infinite;
      margin: 0 auto 20px;
    }
  }
  
  @keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
  }
  
  /* Empty State */
  .empty-state {
    text-align: center;
    padding: 60px 20px;
    color: #6c757d;
  
    .empty-icon {
      font-size: 4rem;
      margin-bottom: 20px;
    }
  
    h3 {
      margin: 0 0 10px 0;
      color: #495057;
    }
  
    p {
      margin: 0;
      font-size: 1.1rem;
    }
  }
  
  /* Items Grid */
  .items-grid {
    display: grid;
    gap: 20px;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
  }
  
  .item-card {
    background: white;
    border: 1px solid #e9ecef;
    border-radius: 12px;
    padding: 20px;
    transition: all 0.3s ease;
    box-shadow: 0 2px 8px rgba(0,0,0,0.05);
  
    &:hover {
      transform: translateY(-2px);
      box-shadow: 0 4px 20px rgba(0,0,0,0.1);
      border-color: #667eea;
    }
  
    .item-content {
      margin-bottom: 15px;
  
      .item-name {
        margin: 0 0 10px 0;
        color: #333;
        font-size: 1.2rem;
        font-weight: 600;
      }
  
      .item-description {
        margin: 0 0 10px 0;
        color: #6c757d;
        line-height: 1.5;
      }
  
      .item-id {
        color: #adb5bd;
        font-size: 0.85rem;
      }
    }
  
    .item-actions {
      display: flex;
      justify-content: flex-end;
    }
  }
  
  /* Status Bar */
  .status-bar {
    margin-top: 40px;
    padding: 15px 20px;
    background: #e9ecef;
    border-radius: 8px;
    display: flex;
    justify-content: space-between;
    align-items: center;
    font-size: 14px;
  
    &.error {
      background: #f8d7da;
      color: #721c24;
      border: 1px solid #f5c6cb;
    }
  
    &.success {
      background: #d4edda;
      color: #155724;
      border: 1px solid #c3e6cb;
    }
  
    .status-text {
      font-weight: 500;
    }
  
    .api-indicator {
      font-size: 12px;
      padding: 4px 8px;
      border-radius: 12px;
      background: #dc3545;
      color: white;
  
      &.connected {
        background: #28a745;
      }
    }
  }
  
  /* Responsive Design */
  @media (max-width: 768px) {
    .container {
      padding: 15px;
    }
  
    .header h1 {
      font-size: 2rem;
    }
  
    .items-grid {
      grid-template-columns: 1fr;
    }
  
    .form-actions {
      flex-direction: column;
    }
  
    .status-bar {
      flex-direction: column;
      gap: 10px;
      text-align: center;
    }
  }
  

=== frontend/src/app/app.component.spec.ts ===

import { TestBed } from '@angular/core/testing';
import { AppComponent } from './app.component';

describe('AppComponent', () => {
  beforeEach(async () => {
    await TestBed.configureTestingModule({
      imports: [AppComponent],
    }).compileComponents();
  });

  it('should create the app', () => {
    const fixture = TestBed.createComponent(AppComponent);
    const app = fixture.componentInstance;
    expect(app).toBeTruthy();
  });

  it(`should have the 'frontend' title`, () => {
    const fixture = TestBed.createComponent(AppComponent);
    const app = fixture.componentInstance;
    expect(app.title).toEqual('frontend');
  });

  it('should render title', () => {
    const fixture = TestBed.createComponent(AppComponent);
    fixture.detectChanges();
    const compiled = fixture.nativeElement as HTMLElement;
    expect(compiled.querySelector('h1')?.textContent).toContain('Hello, frontend');
  });
});


=== frontend/src/app/app.component.ts ===

import { Component, OnInit } from '@angular/core';
import { HttpClient } from '@angular/common/http';
import { CommonModule } from '@angular/common';
import { FormsModule } from '@angular/forms';

interface Item {
  id?: number;
  name: string;
  description?: string;
}

@Component({
  selector: 'app-root',
  imports: [CommonModule, FormsModule],
  templateUrl: './app.component.html',
  styleUrl: './app.component.scss'
})
export class AppComponent implements OnInit {
  title = 'Minimal FastAPI + Angular App';
  
  trackByItemId(index: number, item: Item): number {
    return item.id || index;
  }
  
  items: Item[] = [];
  newItem: Item = { name: '', description: '' };
  status = 'Ready';
  isLoading = false;

  // Use relative URL for CloudFront deployment
  // private apiUrl = '/api';
  
  // For local development, comment out above and use:
  private apiUrl = '/api';


  constructor(private http: HttpClient) {}

  ngOnInit() {
    this.loadItems();
  }

  loadItems() {
    this.isLoading = true;
    this.status = 'Loading items...';
    
    this.http.get<Item[]>(`${this.apiUrl}/items`).subscribe({
      next: (data) => {
        this.items = data;
        this.status = `Loaded ${data.length} items successfully`;
        this.isLoading = false;
      },
      error: (error) => {
        console.error('Error loading items:', error);
        this.status = 'Error loading items. Check if the backend is running.';
        this.isLoading = false;
      }
    });
  }

  addItem() {
    if (!this.newItem.name.trim()) {
      this.status = 'Please enter an item name';
      return;
    }

    this.isLoading = true;
    this.status = 'Adding item...';
    
    this.http.post<Item>(`${this.apiUrl}/items`, this.newItem).subscribe({
      next: (item) => {
        this.items.push(item);
        this.newItem = { name: '', description: '' };
        this.status = `Item "${item.name}" added successfully!`;
        this.isLoading = false;
      },
      error: (error) => {
        console.error('Error adding item:', error);
        this.status = 'Error adding item. Please try again.';
        this.isLoading = false;
      }
    });
  }

  deleteItem(id: number, name: string) {
    if (!confirm(`Are you sure you want to delete "${name}"?`)) {
      return;
    }

    this.isLoading = true;
    this.status = 'Deleting item...';
    
    this.http.delete(`${this.apiUrl}/items/${id}`).subscribe({
      next: () => {
        this.items = this.items.filter(item => item.id !== id);
        this.status = `Item "${name}" deleted successfully!`;
        this.isLoading = false;
      },
      error: (error) => {
        console.error('Error deleting item:', error);
        this.status = 'Error deleting item. Please try again.';
        this.isLoading = false;
      }
    });
  }

  refresh() {
    this.loadItems();
  }
}

=== frontend/src/app/app.config.ts ===

import { ApplicationConfig, provideZoneChangeDetection } from '@angular/core';
import { provideRouter } from '@angular/router';
import { provideHttpClient } from '@angular/common/http';

import { routes } from './app.routes';

export const appConfig: ApplicationConfig = {
  providers: [provideZoneChangeDetection({ eventCoalescing: true }), 
    provideRouter(routes),
    provideHttpClient()
  ]
};


=== frontend/src/app/app.routes.ts ===

import { Routes } from '@angular/router';

export const routes: Routes = [];


=== backend/Dockerfile ===

FROM python:3.11-slim

WORKDIR /app

# Copy requirements first for better caching
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# Copy application code
COPY . .

# Expose port
EXPOSE 8000

# Run the application
CMD ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000"]


=== backend/main.py ===


# ==================== backend/main.py ====================
from fastapi import FastAPI, HTTPException, Depends
from fastapi.middleware.cors import CORSMiddleware
from sqlmodel import SQLModel, Field, create_engine, Session, select
from typing import Optional, List
import os

# Database Model
class Item(SQLModel, table=True):
    id: Optional[int] = Field(default=None, primary_key=True)
    name: str
    description: Optional[str] = None

# Database setup
DATABASE_URL = os.getenv("DATABASE_URL", "sqlite:///./app.db")
engine = create_engine(DATABASE_URL, echo=True)

def create_db_and_tables():
    SQLModel.metadata.create_all(engine)

def get_session():
    with Session(engine) as session:
        yield session

# FastAPI app
app = FastAPI(title="Minimal API")

app.add_middleware(
    CORSMiddleware,
    allow_origins=["*"],
    allow_methods=["*"],
    allow_headers=["*"],
)

@app.on_event("startup")
def on_startup():
    create_db_and_tables()

@app.get("/health")
def health():
    return {"status": "ok"}

@app.get("/api/items", response_model=List[Item])
def get_items(session: Session = Depends(get_session)):
    items = session.exec(select(Item)).all()
    return items

@app.post("/api/items", response_model=Item)
def create_item(item: Item, session: Session = Depends(get_session)):
    session.add(item)
    session.commit()
    session.refresh(item)
    return item

@app.delete("/api/items/{item_id}")
def delete_item(item_id: int, session: Session = Depends(get_session)):
    item = session.get(Item, item_id)
    if not item:
        raise HTTPException(status_code=404, detail="Item not found")
    session.delete(item)
    session.commit()
    return {"message": "Item deleted"}

=== backend/requirements.txt ===

fastapi==0.104.1
uvicorn==0.24.0
sqlmodel==0.0.14